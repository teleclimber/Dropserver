// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/teleclimber/DropServer/cmd/ds-host/testmocks (interfaces: ServiceMaker)

// Package testmocks is a generated GoMock package.
package testmocks

import (
	gomock "github.com/golang/mock/gomock"
	domain "github.com/teleclimber/DropServer/cmd/ds-host/domain"
	reflect "reflect"
)

// MockServiceMaker is a mock of ServiceMaker interface
type MockServiceMaker struct {
	ctrl     *gomock.Controller
	recorder *MockServiceMakerMockRecorder
}

// MockServiceMakerMockRecorder is the mock recorder for MockServiceMaker
type MockServiceMakerMockRecorder struct {
	mock *MockServiceMaker
}

// NewMockServiceMaker creates a new mock instance
func NewMockServiceMaker(ctrl *gomock.Controller) *MockServiceMaker {
	mock := &MockServiceMaker{ctrl: ctrl}
	mock.recorder = &MockServiceMakerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockServiceMaker) EXPECT() *MockServiceMakerMockRecorder {
	return m.recorder
}

// Get mocks base method
func (m *MockServiceMaker) Get(arg0 *domain.Appspace) domain.ReverseServiceI {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0)
	ret0, _ := ret[0].(domain.ReverseServiceI)
	return ret0
}

// Get indicates an expected call of Get
func (mr *MockServiceMakerMockRecorder) Get(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockServiceMaker)(nil).Get), arg0)
}
